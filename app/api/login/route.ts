import { NextRequest } from 'next/server'; import { prisma } from '@/lib/prisma'; import bcrypt from 'bcryptjs'; import { sendOtpEmail } from '@/lib/mailer'; export const runtime='nodejs'; function genCode(){ return Math.floor(100000 + Math.random()*900000).toString(); } export async function POST(req:NextRequest){ const { email, password } = await req.json(); if(!email||!password) return new Response(JSON.stringify({error:'Missing'}),{status:400}); const c = await prisma.company.findUnique({ where:{ email } }); if(!c?.passwordHash) return new Response(JSON.stringify({error:'Invalid credentials'}),{status:401}); const ok = await bcrypt.compare(password, c.passwordHash); if(!ok) return new Response(JSON.stringify({error:'Invalid credentials'}),{status:401}); if(process.env.EMAIL_OTP_ENABLED==='1'){ const code = genCode(); const expires = new Date(Date.now()+10*60*1000); await prisma.otp.create({ data:{ companyId: c.id, email, code, expiresAt: expires } }); await sendOtpEmail(email, code); return new Response(JSON.stringify({ otp: true })); } return new Response(JSON.stringify({ success:true, companyId: c.id }), { headers:{ 'Set-Cookie': `companyId=${c.id}; Path=/; HttpOnly; Secure; SameSite=Lax; Max-Age=2592000` }}); }