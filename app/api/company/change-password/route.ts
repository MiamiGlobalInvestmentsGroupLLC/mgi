import { NextRequest } from 'next/server'; import { prisma } from '@/lib/prisma'; import bcrypt from 'bcryptjs'; export const runtime='nodejs'; export async function POST(req:NextRequest){ const cid=req.cookies.get('companyId')?.value; if(!cid) return new Response(JSON.stringify({error:'NO_AUTH'}),{status:401}); const {current,next}=await req.json(); const c=await prisma.company.findUnique({where:{id:cid}}); if(!c?.passwordHash) return new Response(JSON.stringify({error:'NO_PASSWORD'}),{status:400}); const ok= await bcrypt.compare(current, c.passwordHash); if(!ok) return new Response(JSON.stringify({error:'BAD_PASSWORD'}),{status:403}); const hash= await bcrypt.hash(next,10); await prisma.company.update({where:{id:cid}, data:{passwordHash:hash}}); return new Response(JSON.stringify({ok:true}),{headers:{'Content-Type':'application/json'}});}