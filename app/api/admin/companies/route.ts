import { NextRequest } from 'next/server'; import { prisma } from '@/lib/prisma'; export const runtime='nodejs'; export async function GET(req:NextRequest){ const isAdmin = req.headers.get('cookie')?.includes('admin=1'); if(!isAdmin) return new Response(JSON.stringify({error:'NO_ADMIN'}),{status:401}); const items = await prisma.company.findMany({ orderBy:{ createdAt:'desc' }}); return new Response(JSON.stringify({items}),{headers:{'Content-Type':'application/json'}});} export async function POST(req:NextRequest){ const isAdmin = req.headers.get('cookie')?.includes('admin=1'); if(!isAdmin) return new Response(JSON.stringify({error:'NO_ADMIN'}),{status:401}); const { id, action, daily, monthly, enabled } = await req.json(); if(action==='togglePause'){ const c=await prisma.company.findUnique({where:{id}}); const u=await prisma.company.update({where:{id}, data:{ isPaused: !c?.isPaused }}); return new Response(JSON.stringify({ok:true,isPaused:u.isPaused})); } if(action==='limits'){ await prisma.company.update({where:{id}, data:{ dailyLimit: daily, monthlyLimit: monthly }}); return new Response(JSON.stringify({ok:true})); } if(action==='watermark'){ await prisma.company.update({where:{id}, data:{ watermarkEnabled: !!enabled, watermarkUrl: process.env.DEFAULT_WATERMARK_URL || 'https://miamiglobalgroup.com' }}); return new Response(JSON.stringify({ok:true})); } return new Response(JSON.stringify({error:'UNKNOWN_ACTION'}),{status:400}); }